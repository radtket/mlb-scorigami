{"version":3,"sources":["utility/constants.js","styles.js","components/Header.js","utility/getDataRange.js","components/Chart/Axis.js","components/Chart/ChartNav/ScaleSelect.js","components/Chart/ChartNav/YearPicker.js","components/Chart/ChartNav/index.js","components/Chart/Grid.js","components/Chart/ScaleKey.js","components/Chart/Tooltip.js","components/Chart/index.js","App.js","serviceWorker.js","index.js"],"names":["CELL_DIM","CELL_RATIO","NUMBER_OF_CELLS","MARGINS_SMALL","FIRST_YEAR","LAST_YEAR","ALL_CELL_KEYS","Array","keys","StyledTooltip","styled","dl","_ref","home","visitors","css","position","size","StyledChartNav","div","clearFix","fadein","keyframes","StyledCell","rect","StyledAxisTick","StyledText","text","StyledHeadline","h1","StyledApp","StyledChart","margin","StyledGrid","g","StyledScaleKeyWrap","StyledScaleKey","StyledScore","span","StyledScaleSelect","label","StyledYearPicker","Header","yearType","year","startYear","endYear","_jsxs","children","getDataRange","memoizedDataRange","cache","full","KEY","range","map","forEach","i","j","dataStore","AxisText","val","isXAxis","isActive","_jsx","style","fontWeight","transform","opacity","Axis","_ref2","activeVisitors","activeHome","x","y","ScaleSelect","onChange","value","htmlFor","id","name","RangeWithToolTip","createSliderWithTooltip","Range","SliderWithToolTip","Slider","YearPicker","handleInputChange","defaultValue","Component","activeDotStyle","borderColor","marks","max","min","trackStyle","backgroundColor","ChartNav","setState","e","prev","target","copy","start","end","Grid","scale","data","handleMouseOut","handleMouseOver","num","blank","height","onMouseOut","onMouseOver","rx","ry","stroke","strokeWidth","fill","Math","log","width","ScaleKey","extrema","ref","createRef","useEffect","updateScale","SCALE_DX","ctx","current","getContext","clearRect","fillStyle","fillRect","MAX","round","exp","handleScale","scaleLinear","domain","left","Score","score","Tooltip","Chart","activeProps","scaleSequential","interpolateSpectral","App","useState","timeoutRef","useRef","setTimeout","vistiors","clearTimeout","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","onUpdate","onSuccess","catch","error","Typography","baseFontSize","baseLineHeight","headerFontFamily","bodyFontFamily","injectStyles","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.930a7a3e.chunk.js","sourcesContent":["const NUMBER_OF_CELLS = 26;\n\nexport const CELL_DIM = 25;\n\nexport const CELL_RATIO = NUMBER_OF_CELLS * CELL_DIM;\nexport const CELL_SIZE = CELL_RATIO / 2;\n\nexport const MARGINS_SMALL = CELL_DIM + CELL_DIM;\nexport const MARGINS_LARGE = NUMBER_OF_CELLS * CELL_DIM + (CELL_DIM + CELL_DIM);\n\nexport const SEASON_MAX = 109;\nexport const RANGE_MAX = 7105;\n\n// Dataset end points\nexport const FIRST_YEAR = 1871;\nexport const LAST_YEAR = 2017;\n\nexport const ALL_CELL_KEYS = [...Array(NUMBER_OF_CELLS).keys()];\n","/* eslint-disable import/prefer-default-export */\nimport { clearFix, margin, position, size } from 'polished';\nimport styled, { css, keyframes } from 'styled-components';\nimport {\n  CELL_DIM,\n  CELL_RATIO,\n  MARGINS_LARGE,\n  MARGINS_SMALL,\n} from './utility/constants';\n\nconst TOOLTIP_HEIGHT = 65;\nconst TOOLTIP_WIDTH = 120;\n\nexport const StyledTooltip = styled.dl`\n  ${({ home, visitors }) => {\n    return css`\n      ${position(\n        'absolute',\n        visitors * CELL_DIM + 2 * CELL_DIM - TOOLTIP_HEIGHT + 2,\n        null,\n        null,\n        home > 20\n          ? home * CELL_DIM + 2 * CELL_DIM - TOOLTIP_WIDTH + 2\n          : home * CELL_DIM + 3 * CELL_DIM - 2\n      )};\n      ${size(TOOLTIP_HEIGHT, TOOLTIP_WIDTH)};\n      transition: all 600ms cubic-bezier(0.19, 1, 0.22, 1);\n      text-align: center;\n      pointer-events: none;\n      background: #000;\n      color: #fff;\n      padding: 10px;\n      border-radius: 3px;\n    `;\n  }}\n`;\n\nexport const StyledChartNav = styled.div`\n  ${clearFix()}\n`;\n\nconst fadein = keyframes`\n\tfrom {\n\t\topacity: 0;\n\t}\n\n\tto {\n\t\topacity: 1;\n\t}\n`;\n\nexport const StyledCell = styled.rect`\n  animation: ${fadein} 600ms;\n  transition: fill 400ms ease-in-out;\n`;\n\nexport const StyledAxisTick = styled.div`\n  color: #999;\n  font-size: 12px;\n  position: absolute;\n  text-align: center;\n  width: 100px;\n  margin-left: -50px;\n\n  &::before {\n    position: absolute;\n    width: 1px;\n    height: 5px;\n    background: #666;\n    top: -3px;\n    left: 50px;\n    content: '';\n  }\n\n  &:last-of-type::before {\n    left: 49px;\n  }\n`;\n\nexport const StyledText = styled.text`\n  font-size: 12px;\n  text-anchor: middle;\n`;\n\nexport const StyledHeadline = styled.h1`\n  text-align: center;\n  margin: 2rem 0 0.5rem 50px;\n`;\n\nexport const StyledApp = styled.div`\n  ${size(null, MARGINS_LARGE)}\n  margin: auto;\n`;\n\nexport const StyledAbout = styled.div`\n  ${margin(null, null, null, MARGINS_SMALL)}\n  h2 {\n    margin-top: 20px;\n  }\n`;\n\nexport const StyledChart = styled.div`\n  position: relative;\n\n  > svg {\n    ${size(MARGINS_LARGE)}\n  }\n`;\n\nexport const StyledGrid = styled.g`\n  transform: ${`translate(${MARGINS_SMALL}px, ${MARGINS_SMALL}px)`};\n`;\n\nexport const StyledScaleKeyWrap = styled.div`\n  height: 30px;\n`;\n\nexport const StyledScaleKey = styled.div`\n  ${margin('10px', null, null, MARGINS_SMALL)}\n  position: relative;\n`;\n\nexport const StyledScore = styled.span`\n  em {\n    font-size: 12px;\n    vertical-align: super;\n  }\n`;\n\nexport const StyledScaleSelect = styled.label`\n  float: right;\n  height: 40px;\n  text-align: right;\n  width: 160px;\n`;\n\nexport const StyledYearPicker = styled.div`\n  ${margin('4px', null, null, MARGINS_SMALL)}\n  ${size('40px', CELL_RATIO - 160)}\n  float: left;\n  text-align: center;\n`;\n","import React from 'react';\nimport { StyledHeadline } from '../styles';\n\nconst Header = ({ yearType, year, startYear, endYear }) => {\n  return (\n    <StyledHeadline>\n      MLB Score Frequency{' '}\n      {yearType === 'single' ? `for ${year}` : `from ${startYear}-${endYear}`}\n    </StyledHeadline>\n  );\n};\n\nexport default Header;\n","import dataStore from '../data/dataStore.json';\nimport full from '../data/full.json';\nimport { ALL_CELL_KEYS, FIRST_YEAR, LAST_YEAR } from './constants';\n\nconst memoizedDataRange = () => {\n  const cache = {\n    [`${FIRST_YEAR}-${LAST_YEAR}`]: full,\n  };\n\n  return (startYear, endYear) => {\n    const KEY = `${startYear}-${endYear}`;\n\n    if (KEY in cache) {\n      return cache[KEY];\n    }\n\n    const range = ALL_CELL_KEYS.map(() => {\n      return ALL_CELL_KEYS.map(() => {\n        return 0;\n      });\n    });\n\n    for (let year = startYear; year <= endYear; year += 1) {\n      ALL_CELL_KEYS.forEach(i => {\n        ALL_CELL_KEYS.forEach(j => {\n          range[i][j] += dataStore[year][i][j];\n        });\n      });\n    }\n\n    cache[KEY] = range;\n    return range;\n  };\n};\n\nconst getDataRange = memoizedDataRange();\n\nexport default getDataRange;\n","import React from 'react';\nimport { StyledText } from '../../styles';\nimport {\n  CELL_DIM,\n  ALL_CELL_KEYS,\n  MARGINS_SMALL,\n  CELL_SIZE,\n} from '../../utility/constants';\n\nconst AxisText = ({ val, isXAxis, isActive }) => {\n  return (\n    <StyledText\n      dominant-baseline=\"central\"\n      style={{\n        fontWeight: isActive ? 'bold' : 'normal',\n        transform: `translate(${\n          isXAxis\n            ? `${val * CELL_DIM + CELL_DIM / 2}px, ${CELL_DIM / 2}px`\n            : `${CELL_DIM / 2}px, ${val * CELL_DIM + CELL_DIM / 2}px`\n        })`,\n        opacity: isActive ? 1 : 0.5,\n      }}\n    >\n      {val === 25 ? '25+' : val}\n    </StyledText>\n  );\n};\n\nconst Axis = ({ activeVisitors, activeHome, isXAxis }) => {\n  return (\n    <g\n      style={{\n        transform: `translate(${\n          isXAxis\n            ? `${MARGINS_SMALL}px, ${CELL_DIM}px`\n            : `${CELL_DIM}px, ${MARGINS_SMALL}px`\n        })`,\n      }}\n    >\n      {isXAxis ? (\n        <StyledText dominant-baseline=\"central\" x={CELL_SIZE} y={-10}>\n          Home Team\n        </StyledText>\n      ) : (\n        <StyledText\n          dominant-baseline=\"central\"\n          transform={`rotate(-90, ${-10}, ${CELL_SIZE})`}\n          x={-10}\n          y={CELL_SIZE}\n        >\n          Visiting Team\n        </StyledText>\n      )}\n      {ALL_CELL_KEYS.map(val => {\n        return (\n          <AxisText\n            key={val}\n            isActive={isXAxis ? val === activeHome : val === activeVisitors}\n            isXAxis={isXAxis}\n            val={val}\n          />\n        );\n      })}\n    </g>\n  );\n};\n\nexport default Axis;\n","import React from 'react';\nimport { StyledScaleSelect } from '../../../styles';\n\nconst ScaleSelect = ({ onChange, value }) => {\n  return (\n    <StyledScaleSelect htmlFor=\"scale-select\">\n      <select id=\"scale-select\" name=\"select\" {...{ onChange, value }}>\n        <option value=\"single\">Single Season</option>\n        <option value=\"range\">Range</option>\n      </select>\n    </StyledScaleSelect>\n  );\n};\n\nexport default ScaleSelect;\n","import React from 'react';\nimport Slider, { Range, createSliderWithTooltip } from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nimport { FIRST_YEAR, LAST_YEAR } from '../../../utility/constants';\nimport { StyledYearPicker } from '../../../styles';\n\nconst RangeWithToolTip = createSliderWithTooltip(Range);\nconst SliderWithToolTip = createSliderWithTooltip(Slider);\n\nconst YearPicker = ({ yearType, handleInputChange, defaultValue }) => {\n  const Component =\n    yearType === 'single' ? SliderWithToolTip : RangeWithToolTip;\n\n  return (\n    <StyledYearPicker>\n      <Component\n        activeDotStyle={{ borderColor: '#e9e9e9' }}\n        defaultValue={defaultValue}\n        marks={{\n          1871: 1871,\n          1900: 1900,\n          1925: 1925,\n          1950: 1950,\n          1975: 1975,\n          2000: 2000,\n          2017: 2017,\n        }}\n        max={LAST_YEAR}\n        min={FIRST_YEAR}\n        onChange={handleInputChange}\n        trackStyle={{ backgroundColor: 'transparent' }}\n      />\n    </StyledYearPicker>\n  );\n};\n\nexport default YearPicker;\n","import React from 'react';\nimport { StyledChartNav } from '../../../styles';\nimport { FIRST_YEAR, LAST_YEAR } from '../../../utility/constants';\nimport ScaleSelect from './ScaleSelect';\nimport YearPicker from './YearPicker';\n\nconst ChartNav = ({ yearType, setState }) => {\n  return (\n    <StyledChartNav>\n      <ScaleSelect\n        onChange={e => {\n          return setState(prev => {\n            return { ...prev, yearType: e.target.value };\n          });\n        }}\n        value={yearType}\n      />\n      <YearPicker\n        defaultValue={\n          yearType === 'single' ? LAST_YEAR : [FIRST_YEAR, LAST_YEAR]\n        }\n        handleInputChange={val => {\n          setState(prev => {\n            const copy = { ...prev };\n            if (copy.yearType === 'single') {\n              copy.year = val;\n            } else {\n              const [start, end] = val;\n              // eslint-disable-next-line prefer-destructuring\n              copy.startYear = start;\n\n              copy.endYear = end;\n            }\n            return copy;\n          });\n        }}\n        yearType={yearType}\n      />\n    </StyledChartNav>\n  );\n};\n\nexport default ChartNav;\n","import React from 'react';\nimport { StyledCell, StyledGrid } from '../../styles';\nimport { CELL_DIM, ALL_CELL_KEYS } from '../../utility/constants';\n\nconst Grid = ({\n  scale,\n  data,\n  activeHome,\n  activeVisitors,\n  handleMouseOut,\n  handleMouseOver,\n}) => {\n  return (\n    <StyledGrid>\n      {ALL_CELL_KEYS.map(visitors => {\n        return ALL_CELL_KEYS.map(home => {\n          const num = data[visitors][home];\n          const blank = num === 0;\n\n          return (\n            <g\n              key={`${visitors} -${home}`}\n              style={{\n                transform: `translate(${CELL_DIM * home}px, ${\n                  CELL_DIM * visitors\n                }px)`,\n              }}\n            >\n              <StyledCell\n                height=\"24\"\n                onMouseOut={() => {\n                  return blank || handleMouseOut();\n                }}\n                onMouseOver={() => {\n                  return blank || handleMouseOver(visitors, home);\n                }}\n                rx=\"3\"\n                ry=\"3\"\n                stroke={\n                  activeVisitors === visitors && activeHome === home\n                    ? 'black'\n                    : 'none'\n                }\n                strokeWidth=\"2\"\n                style={{ fill: blank ? '#f0f0f0' : scale(Math.log(num)) }}\n                width=\"24\"\n              />\n            </g>\n          );\n        });\n      })}\n    </StyledGrid>\n  );\n};\n\nexport default Grid;\n","import React, { createRef, useEffect } from 'react';\nimport { scaleLinear } from 'd3';\nimport { CELL_RATIO } from '../../utility/constants';\nimport {\n  StyledAxisTick,\n  StyledScaleKey,\n  StyledScaleKeyWrap,\n} from '../../styles';\n\nconst ScaleKey = ({ extrema, scale }) => {\n  const ref = createRef();\n\n  useEffect(() => {\n    const updateScale = () => {\n      const SCALE_DX = extrema[1] / CELL_RATIO;\n      const ctx = ref.current.getContext('2d');\n      ctx.clearRect(0, 0, CELL_RATIO, 30);\n      let current = 0;\n      while (current < CELL_RATIO) {\n        ctx.fillStyle = scale(current * SCALE_DX);\n        ctx.fillRect(current * 1, 0, 1, 10);\n        current += 1;\n      }\n    };\n\n    updateScale();\n  }, [extrema, ref, scale]);\n\n  const MAX = Math.round(Math.exp(extrema[1]));\n  const handleScale = scaleLinear().domain(extrema).range([0, CELL_RATIO]);\n\n  return (\n    <StyledScaleKey>\n      <canvas ref={ref} height={10} width={CELL_RATIO} />\n      <StyledScaleKeyWrap>\n        {[1, 2, 3, 5, 10, 20, 50, 100, 200, 500, 1000, 2000].map(val => {\n          if (val < MAX / 2) {\n            return (\n              <StyledAxisTick\n                key={val}\n                style={{ left: `${handleScale(Math.log(val))}px` }}\n              >\n                {val}\n              </StyledAxisTick>\n            );\n          }\n          return false;\n        })}\n\n        <StyledAxisTick style={{ left: `${handleScale(Math.log(MAX))}px` }}>\n          {MAX}\n        </StyledAxisTick>\n      </StyledScaleKeyWrap>\n    </StyledScaleKey>\n  );\n};\n\nexport default ScaleKey;\n","import React from 'react';\nimport { StyledScore, StyledTooltip } from '../../styles';\n\nconst Score = ({ score }) => {\n  if (score === 25) {\n    return (\n      <StyledScore>\n        {score}\n        <em>+</em>\n      </StyledScore>\n    );\n  }\n\n  return score;\n};\n\nconst Tooltip = ({ visitors, home, num }) => {\n  return (\n    <StyledTooltip {...{ visitors, home }}>\n      <dt>\n        <Score score={visitors} /> – <Score score={home} />\n      </dt>\n      <dd>{`${num} game${num === 1 ? '' : 's'}`}</dd>\n    </StyledTooltip>\n  );\n};\n\nexport default Tooltip;\n","import React from 'react';\nimport { scaleSequential, interpolateSpectral } from 'd3';\nimport Axis from './Axis';\nimport ChartNav from './ChartNav';\nimport Grid from './Grid';\nimport ScaleKey from './ScaleKey';\nimport Tooltip from './Tooltip';\nimport { MARGINS_LARGE, MARGINS_SMALL } from '../../utility/constants';\nimport { StyledChart } from '../../styles';\n\nconst Chart = ({\n  activeHome,\n  activeVisitors,\n  data,\n  extrema,\n  handleMouseOut,\n  handleMouseOver,\n  setState,\n  yearType,\n}) => {\n  const activeProps = { activeHome, activeVisitors };\n  const scale = scaleSequential(interpolateSpectral).domain([\n    extrema[1],\n    extrema[0],\n  ]);\n\n  return (\n    <StyledChart>\n      {activeVisitors !== null && (\n        <Tooltip\n          home={activeHome}\n          num={data[activeVisitors][activeHome]}\n          visitors={activeVisitors}\n        />\n      )}\n      <svg>\n        <Axis isXAxis {...activeProps} />\n        <Axis {...activeProps} />\n\n        <Grid\n          {...{\n            ...activeProps,\n            scale,\n            data,\n            handleMouseOut,\n            handleMouseOver,\n          }}\n        />\n      </svg>\n      <ScaleKey extrema={extrema} scale={scale} />\n      <ChartNav {...{ yearType, setState }} />\n    </StyledChart>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useRef } from 'react';\nimport Header from './components/Header';\nimport dataStore from './data/dataStore.json';\nimport getDataRange from './utility/getDataRange';\n\nimport { SEASON_MAX, RANGE_MAX } from './utility/constants';\n\nimport Chart from './components/Chart';\nimport { StyledApp } from './styles';\n\nconst App = () => {\n  const [\n    { activeVisitors, activeHome, yearType, startYear, endYear, year },\n    setState,\n  ] = useState({\n    activeHome: null,\n    activeVisitors: null,\n    endYear: 2017,\n    startYear: 1871,\n    year: 2017,\n    yearType: 'range',\n  });\n\n  const timeoutRef = useRef(null);\n\n  const data =\n    yearType === 'single' ? dataStore[year] : getDataRange(startYear, endYear);\n\n  const extrema = [\n    Math.log(1),\n    Math.log(yearType === 'single' ? SEASON_MAX : RANGE_MAX),\n  ];\n\n  return (\n    <StyledApp>\n      <Header {...{ year, startYear, endYear, yearType, data }} />\n      <Chart\n        {...{\n          activeHome,\n          activeVisitors,\n          data,\n          extrema,\n          handleMouseOut: () => {\n            timeoutRef.current = setTimeout(() => {\n              setState(prev => {\n                return { ...prev, activeVisitors: null, activeHome: null };\n              });\n            }, 10);\n          },\n          handleMouseOver: (vistiors, home) => {\n            clearTimeout(timeoutRef.current);\n            setState(prev => {\n              return { ...prev, activeVisitors: vistiors, activeHome: home };\n            });\n          },\n\n          setState,\n          yearType,\n        }}\n      />\n    </StyledApp>\n  );\n};\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.scss';\nimport Typography from 'typography';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst typography = new Typography({\n  baseFontSize: '16px',\n  baseLineHeight: 1.45,\n  headerFontFamily: [\n    'Avenir Next',\n    'Helvetica Neue',\n    'Segoe UI',\n    'Helvetica',\n    'Arial',\n    'sans-serif',\n  ],\n  bodyFontFamily: ['Georgia', 'serif'],\n});\n\ntypography.injectStyles();\n\nrender(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}